name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  test-merged-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install GitHub CLI
        run: |
          sudo apt-get install gh

      - name: Authenticate with GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Get previous tag
        id: get_previous_tag
        run: |
          # Find the previous tag, fallback to an empty string if none exists
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ || echo "")
          echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> $GITHUB_ENV

      - name: Check if previous tag exists
        if: env.PREVIOUS_TAG != ''
        run: echo "Previous tag found: ${{ env.PREVIOUS_TAG }}"

      - name: Get merged PRs since the last release
        if: env.PREVIOUS_TAG != ''
        run: |
          CURRENT_TAG=${{ github.ref_name }}
          PREVIOUS_TAG=${{ env.PREVIOUS_TAG }}

          # Use GitHub CLI to get the merged PRs between the two tags
          PRS=$(gh pr list --state merged --search "merged:>=`git show -s --format=%ci $PREVIOUS_TAG`" --json title,mergedAt,author --jq '.[]')

          # Print the PR details instead of sending to Mixpanel for testing
          echo "Merged PRs since last release:"
          for row in $(echo "${PRS}" | jq -r '. | @base64'); do
            _jq() {
              echo ${row} | base64 --decode | jq -r ${1}
            }

            PRTitle=$(_jq '.title')
            PRUser=$(_jq '.author.login')
            PRMergedAt=$(_jq '.mergedAt')

            echo "PR Title: $PRTitle"
            echo "Merged At: $PRMergedAt"
            echo "User: $PRUser"
            echo "---"
          done
